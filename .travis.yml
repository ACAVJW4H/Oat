language: cpp

# This method for installing apt-based dependencies works in
# container-based build (sudoless). Should use it if possible.
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-4.8 # Get -std=c++11 support
    - g++-4.8

before_install:
  - sudo add-apt-repository ppa:amarburg/opencv3 --yes
  - sudo apt-get update -qq
  - if [ "$CXX" = "g++" ]; then sudo apt-get install -y g++-4.8; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi

install:
  - sudo apt-get install -y libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
  - sudo apt-get install -y libopencv3-dev

before_script:

  # Install boost
  - cd $TRAVIS_BUILD_DIR
  - wget http://sourceforge.net/projects/boost/files/latest/download?source=files -O tarboost
  - tar -xf tarboost
  - cd ./boost*
  - ./bootstrap.sh
  - ./b2 --with-program_options --with-system --with-thread --with-filesystem
  - cd ..
  - sudo mv boost* /opt

  # Configure build
  # Debug build includes throw expressions required to pass tests but opimized
  # out of release build. I don't use asserts because they dont allow shmem
  # cleanup.
  - cd $TRAVIS_BUILD_DIR
  - mkdir debug 
  - cd debug
  - cmake -DCMAKE_BUILD_TYPE=Debug -DBOOST_ROOT=/opt/boost_1_59_0 ..

script: make && make test
